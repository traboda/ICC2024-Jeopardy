from z3 import *

x = [Int(f'x{i}') for i in range(32)]

s = Solver()
s.add(6 * x[0] +1 * x[1] +12 * x[2] +0 * x[3] +14 * x[4] +3 * x[5] +11 * x[6] +11 * x[7] +14 * x[8] +2 * x[9] +7 * x[10] +6 * x[11] +2 * x[12] +4 * x[13] +5 * x[14] +2 * x[15] +3 * x[16] +5 * x[17] +2 * x[18] +5 * x[19] +4 * x[20] +4 * x[21] +0 * x[22] +9 * x[23] +10 * x[24] +10 * x[25] +8 * x[26] +9 * x[27] +13 * x[28] +0 * x[29] +11 * x[30] +0 * x[31] == 30414)
s.add(0 * x[0] +5 * x[1] +12 * x[2] +9 * x[3] +11 * x[4] +13 * x[5] +4 * x[6] +13 * x[7] +0 * x[8] +5 * x[9] +13 * x[10] +5 * x[11] +5 * x[12] +8 * x[13] +7 * x[14] +14 * x[15] +13 * x[16] +2 * x[17] +14 * x[18] +6 * x[19] +0 * x[20] +12 * x[21] +3 * x[22] +9 * x[23] +12 * x[24] +9 * x[25] +8 * x[26] +14 * x[27] +12 * x[28] +12 * x[29] +11 * x[30] +10 * x[31] == 38289)
s.add(10 * x[0] +0 * x[1] +0 * x[2] +6 * x[3] +10 * x[4] +1 * x[5] +8 * x[6] +11 * x[7] +9 * x[8] +14 * x[9] +13 * x[10] +7 * x[11] +2 * x[12] +14 * x[13] +10 * x[14] +2 * x[15] +2 * x[16] +8 * x[17] +12 * x[18] +4 * x[19] +3 * x[20] +2 * x[21] +8 * x[22] +10 * x[23] +9 * x[24] +12 * x[25] +11 * x[26] +9 * x[27] +8 * x[28] +8 * x[29] +10 * x[30] +0 * x[31] == 34359)
s.add(0 * x[0] +3 * x[1] +12 * x[2] +9 * x[3] +5 * x[4] +9 * x[5] +7 * x[6] +12 * x[7] +1 * x[8] +2 * x[9] +8 * x[10] +9 * x[11] +10 * x[12] +2 * x[13] +13 * x[14] +14 * x[15] +10 * x[16] +2 * x[17] +10 * x[18] +1 * x[19] +13 * x[20] +1 * x[21] +3 * x[22] +12 * x[23] +7 * x[24] +13 * x[25] +5 * x[26] +3 * x[27] +3 * x[28] +7 * x[29] +3 * x[30] +5 * x[31] == 29888)
s.add(5 * x[0] +11 * x[1] +10 * x[2] +14 * x[3] +4 * x[4] +12 * x[5] +11 * x[6] +1 * x[7] +13 * x[8] +10 * x[9] +13 * x[10] +12 * x[11] +5 * x[12] +8 * x[13] +3 * x[14] +14 * x[15] +4 * x[16] +7 * x[17] +13 * x[18] +6 * x[19] +6 * x[20] +2 * x[21] +14 * x[22] +14 * x[23] +14 * x[24] +1 * x[25] +1 * x[26] +4 * x[27] +9 * x[28] +3 * x[29] +6 * x[30] +0 * x[31] == 38947)
s.add(0 * x[0] +12 * x[1] +8 * x[2] +8 * x[3] +13 * x[4] +11 * x[5] +10 * x[6] +5 * x[7] +13 * x[8] +3 * x[9] +11 * x[10] +8 * x[11] +8 * x[12] +3 * x[13] +0 * x[14] +6 * x[15] +7 * x[16] +5 * x[17] +12 * x[18] +3 * x[19] +9 * x[20] +9 * x[21] +7 * x[22] +8 * x[23] +1 * x[24] +10 * x[25] +13 * x[26] +1 * x[27] +14 * x[28] +4 * x[29] +4 * x[30] +11 * x[31] == 32749)
s.add(11 * x[0] +9 * x[1] +1 * x[2] +12 * x[3] +11 * x[4] +3 * x[5] +12 * x[6] +11 * x[7] +6 * x[8] +14 * x[9] +0 * x[10] +8 * x[11] +1 * x[12] +8 * x[13] +4 * x[14] +2 * x[15] +4 * x[16] +8 * x[17] +5 * x[18] +2 * x[19] +2 * x[20] +10 * x[21] +5 * x[22] +2 * x[23] +2 * x[24] +0 * x[25] +13 * x[26] +7 * x[27] +5 * x[28] +8 * x[29] +5 * x[30] +12 * x[31] == 30609)
s.add(12 * x[0] +10 * x[1] +2 * x[2] +0 * x[3] +4 * x[4] +6 * x[5] +6 * x[6] +2 * x[7] +5 * x[8] +0 * x[9] +2 * x[10] +5 * x[11] +10 * x[12] +4 * x[13] +1 * x[14] +10 * x[15] +1 * x[16] +13 * x[17] +4 * x[18] +14 * x[19] +2 * x[20] +13 * x[21] +9 * x[22] +14 * x[23] +11 * x[24] +13 * x[25] +3 * x[26] +11 * x[27] +10 * x[28] +2 * x[29] +14 * x[30] +1 * x[31] == 31969)
s.add(1 * x[0] +4 * x[1] +6 * x[2] +3 * x[3] +1 * x[4] +4 * x[5] +12 * x[6] +10 * x[7] +2 * x[8] +5 * x[9] +9 * x[10] +13 * x[11] +0 * x[12] +10 * x[13] +0 * x[14] +14 * x[15] +0 * x[16] +9 * x[17] +1 * x[18] +9 * x[19] +1 * x[20] +6 * x[21] +13 * x[22] +12 * x[23] +7 * x[24] +2 * x[25] +11 * x[26] +6 * x[27] +1 * x[28] +0 * x[29] +1 * x[30] +7 * x[31] == 26413)
s.add(7 * x[0] +4 * x[1] +1 * x[2] +6 * x[3] +10 * x[4] +14 * x[5] +1 * x[6] +2 * x[7] +10 * x[8] +2 * x[9] +5 * x[10] +11 * x[11] +11 * x[12] +0 * x[13] +10 * x[14] +7 * x[15] +11 * x[16] +5 * x[17] +0 * x[18] +8 * x[19] +9 * x[20] +12 * x[21] +1 * x[22] +0 * x[23] +12 * x[24] +4 * x[25] +13 * x[26] +10 * x[27] +10 * x[28] +4 * x[29] +10 * x[30] +6 * x[31] == 31774)
s.add(6 * x[0] +7 * x[1] +1 * x[2] +1 * x[3] +2 * x[4] +3 * x[5] +9 * x[6] +6 * x[7] +11 * x[8] +4 * x[9] +12 * x[10] +5 * x[11] +14 * x[12] +4 * x[13] +11 * x[14] +0 * x[15] +3 * x[16] +9 * x[17] +6 * x[18] +0 * x[19] +13 * x[20] +2 * x[21] +12 * x[22] +9 * x[23] +10 * x[24] +8 * x[25] +14 * x[26] +6 * x[27] +2 * x[28] +5 * x[29] +3 * x[30] +7 * x[31] == 28799)
s.add(7 * x[0] +5 * x[1] +13 * x[2] +2 * x[3] +11 * x[4] +0 * x[5] +13 * x[6] +10 * x[7] +8 * x[8] +8 * x[9] +5 * x[10] +14 * x[11] +4 * x[12] +4 * x[13] +10 * x[14] +11 * x[15] +11 * x[16] +11 * x[17] +14 * x[18] +6 * x[19] +3 * x[20] +11 * x[21] +8 * x[22] +12 * x[23] +3 * x[24] +3 * x[25] +1 * x[26] +3 * x[27] +6 * x[28] +3 * x[29] +0 * x[30] +3 * x[31] == 33632)
s.add(3 * x[0] +7 * x[1] +3 * x[2] +3 * x[3] +8 * x[4] +7 * x[5] +14 * x[6] +14 * x[7] +3 * x[8] +7 * x[9] +3 * x[10] +13 * x[11] +11 * x[12] +7 * x[13] +3 * x[14] +9 * x[15] +14 * x[16] +14 * x[17] +0 * x[18] +13 * x[19] +4 * x[20] +12 * x[21] +12 * x[22] +2 * x[23] +14 * x[24] +9 * x[25] +1 * x[26] +5 * x[27] +1 * x[28] +0 * x[29] +4 * x[30] +2 * x[31] == 33787)
s.add(2 * x[0] +6 * x[1] +12 * x[2] +11 * x[3] +1 * x[4] +12 * x[5] +5 * x[6] +6 * x[7] +6 * x[8] +3 * x[9] +4 * x[10] +5 * x[11] +2 * x[12] +2 * x[13] +3 * x[14] +13 * x[15] +6 * x[16] +10 * x[17] +6 * x[18] +8 * x[19] +11 * x[20] +9 * x[21] +5 * x[22] +7 * x[23] +10 * x[24] +12 * x[25] +7 * x[26] +3 * x[27] +1 * x[28] +11 * x[29] +12 * x[30] +13 * x[31] == 32460)
s.add(13 * x[0] +10 * x[1] +6 * x[2] +4 * x[3] +8 * x[4] +13 * x[5] +5 * x[6] +13 * x[7] +2 * x[8] +4 * x[9] +2 * x[10] +3 * x[11] +7 * x[12] +11 * x[13] +1 * x[14] +2 * x[15] +12 * x[16] +6 * x[17] +2 * x[18] +2 * x[19] +0 * x[20] +1 * x[21] +10 * x[22] +13 * x[23] +10 * x[24] +11 * x[25] +3 * x[26] +6 * x[27] +3 * x[28] +7 * x[29] +9 * x[30] +5 * x[31] == 29832)
s.add(5 * x[0] +11 * x[1] +10 * x[2] +7 * x[3] +11 * x[4] +10 * x[5] +6 * x[6] +1 * x[7] +1 * x[8] +1 * x[9] +4 * x[10] +7 * x[11] +4 * x[12] +0 * x[13] +13 * x[14] +2 * x[15] +9 * x[16] +11 * x[17] +7 * x[18] +11 * x[19] +8 * x[20] +6 * x[21] +1 * x[22] +11 * x[23] +13 * x[24] +11 * x[25] +13 * x[26] +12 * x[27] +9 * x[28] +3 * x[29] +3 * x[30] +7 * x[31] == 30277)
s.add(7 * x[0] +6 * x[1] +5 * x[2] +7 * x[3] +1 * x[4] +5 * x[5] +3 * x[6] +14 * x[7] +14 * x[8] +8 * x[9] +10 * x[10] +3 * x[11] +11 * x[12] +2 * x[13] +3 * x[14] +10 * x[15] +12 * x[16] +4 * x[17] +4 * x[18] +8 * x[19] +4 * x[20] +14 * x[21] +12 * x[22] +1 * x[23] +11 * x[24] +14 * x[25] +9 * x[26] +14 * x[27] +14 * x[28] +2 * x[29] +13 * x[30] +13 * x[31] == 40129)
s.add(13 * x[0] +5 * x[1] +6 * x[2] +0 * x[3] +6 * x[4] +6 * x[5] +11 * x[6] +13 * x[7] +12 * x[8] +13 * x[9] +1 * x[10] +5 * x[11] +4 * x[12] +6 * x[13] +1 * x[14] +8 * x[15] +2 * x[16] +14 * x[17] +12 * x[18] +5 * x[19] +2 * x[20] +5 * x[21] +8 * x[22] +14 * x[23] +14 * x[24] +4 * x[25] +10 * x[26] +10 * x[27] +6 * x[28] +11 * x[29] +9 * x[30] +11 * x[31] == 36779)
s.add(11 * x[0] +12 * x[1] +4 * x[2] +0 * x[3] +9 * x[4] +4 * x[5] +10 * x[6] +5 * x[7] +4 * x[8] +3 * x[9] +8 * x[10] +4 * x[11] +10 * x[12] +5 * x[13] +2 * x[14] +4 * x[15] +5 * x[16] +8 * x[17] +2 * x[18] +3 * x[19] +2 * x[20] +6 * x[21] +3 * x[22] +14 * x[23] +3 * x[24] +3 * x[25] +6 * x[26] +12 * x[27] +1 * x[28] +0 * x[29] +6 * x[30] +13 * x[31] == 27257)
s.add(13 * x[0] +9 * x[1] +12 * x[2] +9 * x[3] +11 * x[4] +2 * x[5] +12 * x[6] +1 * x[7] +10 * x[8] +2 * x[9] +1 * x[10] +6 * x[11] +9 * x[12] +0 * x[13] +8 * x[14] +11 * x[15] +2 * x[16] +2 * x[17] +6 * x[18] +12 * x[19] +11 * x[20] +14 * x[21] +7 * x[22] +1 * x[23] +2 * x[24] +14 * x[25] +13 * x[26] +4 * x[27] +14 * x[28] +9 * x[29] +2 * x[30] +9 * x[31] == 32704)
s.add(9 * x[0] +10 * x[1] +5 * x[2] +1 * x[3] +6 * x[4] +14 * x[5] +5 * x[6] +0 * x[7] +2 * x[8] +12 * x[9] +1 * x[10] +0 * x[11] +8 * x[12] +5 * x[13] +7 * x[14] +7 * x[15] +12 * x[16] +0 * x[17] +2 * x[18] +12 * x[19] +13 * x[20] +11 * x[21] +8 * x[22] +11 * x[23] +3 * x[24] +3 * x[25] +13 * x[26] +10 * x[27] +13 * x[28] +7 * x[29] +11 * x[30] +12 * x[31] == 32234)
s.add(12 * x[0] +6 * x[1] +3 * x[2] +3 * x[3] +5 * x[4] +3 * x[5] +12 * x[6] +8 * x[7] +3 * x[8] +14 * x[9] +11 * x[10] +4 * x[11] +7 * x[12] +0 * x[13] +7 * x[14] +8 * x[15] +0 * x[16] +4 * x[17] +12 * x[18] +1 * x[19] +0 * x[20] +9 * x[21] +8 * x[22] +10 * x[23] +7 * x[24] +6 * x[25] +11 * x[26] +5 * x[27] +8 * x[28] +5 * x[29] +11 * x[30] +4 * x[31] == 31217)
s.add(4 * x[0] +8 * x[1] +7 * x[2] +8 * x[3] +11 * x[4] +12 * x[5] +11 * x[6] +12 * x[7] +14 * x[8] +12 * x[9] +12 * x[10] +2 * x[11] +14 * x[12] +13 * x[13] +5 * x[14] +7 * x[15] +12 * x[16] +10 * x[17] +3 * x[18] +5 * x[19] +12 * x[20] +8 * x[21] +3 * x[22] +8 * x[23] +14 * x[24] +1 * x[25] +5 * x[26] +3 * x[27] +9 * x[28] +9 * x[29] +13 * x[30] +9 * x[31] == 42181)
s.add(9 * x[0] +3 * x[1] +5 * x[2] +10 * x[3] +6 * x[4] +6 * x[5] +0 * x[6] +1 * x[7] +8 * x[8] +3 * x[9] +7 * x[10] +1 * x[11] +4 * x[12] +0 * x[13] +8 * x[14] +4 * x[15] +3 * x[16] +9 * x[17] +9 * x[18] +11 * x[19] +13 * x[20] +9 * x[21] +3 * x[22] +5 * x[23] +14 * x[24] +9 * x[25] +0 * x[26] +10 * x[27] +5 * x[28] +5 * x[29] +1 * x[30] +12 * x[31] == 29441)
s.add(12 * x[0] +14 * x[1] +13 * x[2] +8 * x[3] +1 * x[4] +0 * x[5] +11 * x[6] +9 * x[7] +10 * x[8] +9 * x[9] +14 * x[10] +5 * x[11] +2 * x[12] +7 * x[13] +4 * x[14] +6 * x[15] +13 * x[16] +12 * x[17] +5 * x[18] +4 * x[19] +14 * x[20] +4 * x[21] +11 * x[22] +1 * x[23] +12 * x[24] +2 * x[25] +7 * x[26] +5 * x[27] +6 * x[28] +9 * x[29] +8 * x[30] +4 * x[31] == 38742)
s.add(4 * x[0] +5 * x[1] +10 * x[2] +14 * x[3] +10 * x[4] +10 * x[5] +13 * x[6] +9 * x[7] +11 * x[8] +7 * x[9] +7 * x[10] +13 * x[11] +8 * x[12] +14 * x[13] +12 * x[14] +10 * x[15] +13 * x[16] +13 * x[17] +2 * x[18] +13 * x[19] +2 * x[20] +3 * x[21] +8 * x[22] +9 * x[23] +1 * x[24] +11 * x[25] +7 * x[26] +8 * x[27] +11 * x[28] +13 * x[29] +11 * x[30] +7 * x[31] == 39415)
s.add(7 * x[0] +9 * x[1] +8 * x[2] +9 * x[3] +5 * x[4] +8 * x[5] +1 * x[6] +8 * x[7] +11 * x[8] +4 * x[9] +8 * x[10] +10 * x[11] +13 * x[12] +12 * x[13] +2 * x[14] +2 * x[15] +5 * x[16] +4 * x[17] +13 * x[18] +2 * x[19] +6 * x[20] +14 * x[21] +14 * x[22] +0 * x[23] +7 * x[24] +10 * x[25] +5 * x[26] +3 * x[27] +13 * x[28] +13 * x[29] +10 * x[30] +11 * x[31] == 34276)
s.add(11 * x[0] +2 * x[1] +2 * x[2] +6 * x[3] +0 * x[4] +12 * x[5] +3 * x[6] +7 * x[7] +10 * x[8] +7 * x[9] +0 * x[10] +13 * x[11] +3 * x[12] +10 * x[13] +10 * x[14] +13 * x[15] +13 * x[16] +9 * x[17] +0 * x[18] +8 * x[19] +13 * x[20] +10 * x[21] +1 * x[22] +11 * x[23] +13 * x[24] +9 * x[25] +11 * x[26] +5 * x[27] +9 * x[28] +6 * x[29] +1 * x[30] +6 * x[31] == 33654)
s.add(5 * x[0] +5 * x[1] +9 * x[2] +2 * x[3] +13 * x[4] +3 * x[5] +6 * x[6] +1 * x[7] +11 * x[8] +11 * x[9] +4 * x[10] +4 * x[11] +8 * x[12] +12 * x[13] +3 * x[14] +8 * x[15] +11 * x[16] +14 * x[17] +10 * x[18] +13 * x[19] +8 * x[20] +0 * x[21] +0 * x[22] +1 * x[23] +8 * x[24] +10 * x[25] +0 * x[26] +6 * x[27] +8 * x[28] +9 * x[29] +12 * x[30] +3 * x[31] == 30450)
s.add(1 * x[0] +5 * x[1] +4 * x[2] +13 * x[3] +12 * x[4] +2 * x[5] +8 * x[6] +8 * x[7] +0 * x[8] +10 * x[9] +11 * x[10] +2 * x[11] +11 * x[12] +0 * x[13] +1 * x[14] +4 * x[15] +5 * x[16] +8 * x[17] +0 * x[18] +13 * x[19] +10 * x[20] +12 * x[21] +10 * x[22] +10 * x[23] +1 * x[24] +11 * x[25] +0 * x[26] +13 * x[27] +3 * x[28] +13 * x[29] +12 * x[30] +14 * x[31] == 36230)
s.add(1 * x[0] +8 * x[1] +8 * x[2] +3 * x[3] +9 * x[4] +3 * x[5] +13 * x[6] +13 * x[7] +11 * x[8] +14 * x[9] +4 * x[10] +3 * x[11] +5 * x[12] +11 * x[13] +9 * x[14] +4 * x[15] +7 * x[16] +5 * x[17] +12 * x[18] +1 * x[19] +10 * x[20] +11 * x[21] +6 * x[22] +4 * x[23] +1 * x[24] +4 * x[25] +2 * x[26] +1 * x[27] +1 * x[28] +5 * x[29] +7 * x[30] +13 * x[31] == 31115)
s.add(2 * x[0] +0 * x[1] +11 * x[2] +1 * x[3] +6 * x[4] +4 * x[5] +10 * x[6] +7 * x[7] +4 * x[8] +8 * x[9] +10 * x[10] +7 * x[11] +3 * x[12] +2 * x[13] +9 * x[14] +14 * x[15] +5 * x[16] +3 * x[17] +6 * x[18] +12 * x[19] +3 * x[20] +14 * x[21] +3 * x[22] +8 * x[23] +6 * x[24] +4 * x[25] +0 * x[26] +12 * x[27] +12 * x[28] +1 * x[29] +8 * x[30] +4 * x[31] == 30962)

if s.check() == sat:
    m = s.model()
    result = [m.evaluate(var).as_long() for var in x]  # Iterate over 'x', the variables
    print(result)
else:
    print("No solution found")